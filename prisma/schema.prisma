// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  pets Pet[]

  @@map("users")
}

model Pet {
  id     String  @id @default(uuid())
  userId String
  name   String
  age    Int
  breed  String
  sex    Boolean

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Collar Collar?

  @@map("pets")
}

model Collar {
  id    String @id @default(uuid())
  token String
  petId String @unique

  pet          Pet            @relation(fields: [petId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gps          GPS[]
  sound        Sound[]
  acelerometer Acelerometer[]

  @@map("collars")
}

model GPS {
  id        String @id @default(uuid())
  collarId  String
  latitude  String
  longitude String

  Collar Collar? @relation(fields: [collarId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("gps")
}

model Sound {
  id       String @id @default(uuid())
  collarId String
  value    Int

  Collar Collar? @relation(fields: [collarId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("sounds")
}

model Acelerometer {
  id       String @id @default(uuid())
  collarId String
  x        String
  y        String
  z        String

  Collar Collar? @relation(fields: [collarId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("acelerometers")
}