// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  pets Pet[]

  @@map("users")
}

model Pet {
  id       String  @id @default(uuid())
  userId   String
  name     String
  age      Int
  breed    String
  sex      Boolean
  collarId String  @unique

  user   User?   @relation(fields: [userId], references: [id])
  collar Collar? @relation(fields: [collarId], references: [id])

  stress       Stress[]
  gps          GPS[]
  sound        Sound[]
  acelerometer Acelerometer[]
  hearRate     HeartRate[]

  @@map("pets")
}

model Collar {
  id String @id @default(uuid())

  pet Pet?

  @@map("collars")
}

model Stress {
  id             String @id @default(uuid())
  petId          String
  soundId        String @unique
  acelerometerId String @unique
  heartRateId    String @unique
  totalValue     String

  pet Pet? @relation(fields: [petId], references: [id])
  sound Sound? @relation(fields: [soundId], references: [id])
  acelerometer Acelerometer? @relation(fields: [acelerometerId], references: [id])
  heartRate HeartRate? @relation(fields: [heartRateId], references: [id])

  @@map("stresses")
}

model GPS {
  id        String @id @default(uuid())
  petId     String
  latitude  String
  longitude String
  locale    String

  pet Pet? @relation(fields: [petId], references: [id])

  @@map("gps")
}

model Sound {
  id    String @id @default(uuid())
  petId String
  value Int

  pet Pet? @relation(fields: [petId], references: [id])

  stress Stress?

  @@map("sounds")
}

model Acelerometer {
  id    String @id @default(uuid())
  petId String
  value String

  pet Pet? @relation(fields: [petId], references: [id])

  stress Stress?

  @@map("acelerometers")
}

model HeartRate {
  id    String @id @default(uuid())
  petId String
  value Int

  pet Pet? @relation(fields: [petId], references: [id])

  stress Stress?

  @@map("heart-rates")
}
